{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  cartItems: [],\n  totalItemsPrice: 0,\n  totalItems: 0,\n  totalQuantity: 0\n};\nconst cartSlice = createSlice({\n  name: \"cartSlice\",\n  initialState,\n  reducers: {\n    addCartItem: (state, action) => {\n      let item_exists = state.cartItems.find(item => item.id === action.payload.id);\n      if (!item_exists) {\n        state.cartItems = [...state.cartItems, action.payload];\n        state.totalQuantity = ++state.totalQuantity;\n        state.totalItemsPrice = state.totalItemsPrice + action.payload.price;\n        state.totalItems = ++state.totalItems;\n      }\n    },\n    updateItemQuantity: (state, action) => {\n      let index = action.payload.key;\n      if (action.payload.operator === \"+\") {\n        ++state.cartItems[index].quantity;\n        state.totalItemsPrice = state.totalItemsPrice + action.payload.item.price;\n        ++state.totalQuantity;\n      } else {\n        if (state.cartItems[index].quantity > 1) {\n          --state.cartItems[index].quantity;\n          state.totalItemsPrice = state.totalItemsPrice - action.payload.item.price;\n          --state.totalQuantity;\n        }\n      }\n    },\n    deleteCartItem: (state, action) => {\n      let filteredCart = state.cartItems.filter(elem => {\n        return elem.id != action.payload.id;\n      });\n      state.cartItems = filteredCart;\n      state.totalItemsPrice = state.totalItemsPrice - action.payload.price * action.payload.quantity;\n      state.totalQuantity = state.totalQuantity - action.payload.quantity;\n      --state.totalItems;\n    }\n  }\n});\nexport const {\n  addCartItem,\n  updateItemQuantity,\n  deleteCartItem\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","cartItems","totalItemsPrice","totalItems","totalQuantity","cartSlice","name","reducers","addCartItem","state","action","item_exists","find","item","id","payload","price","updateItemQuantity","index","key","operator","quantity","deleteCartItem","filteredCart","filter","elem","actions","reducer"],"sources":["C:/Users/OWNER/Downloads/Configuring+the+Google+OAuth/src/Redux/Cart/cartSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\"\n\nconst initialState = {\n    cartItems : [],\n    totalItemsPrice : 0,\n    totalItems : 0,\n    totalQuantity : 0\n}\n\nconst cartSlice = createSlice({\n    name : \"cartSlice\",\n    initialState,\n    reducers:{\n        addCartItem : (state,action)=>{\n            let item_exists = state.cartItems.find((item)=>item.id===action.payload.id);\n            if(!item_exists){\n                state.cartItems = [...state.cartItems, action.payload];\n                state.totalQuantity = ++state.totalQuantity;\n                state.totalItemsPrice = state.totalItemsPrice+action.payload.price;\n                state.totalItems = ++state.totalItems;\n            }\n        },\n        updateItemQuantity : (state,action)=>{\n            let index = action.payload.key;\n\n            if(action.payload.operator===\"+\"){\n                ++state.cartItems[index].quantity;\n                state.totalItemsPrice = state.totalItemsPrice + action.payload.item.price\n                ++state.totalQuantity;\n            }else{\n                if(state.cartItems[index].quantity>1){\n                    --state.cartItems[index].quantity;\n                    state.totalItemsPrice = state.totalItemsPrice - action.payload.item.price\n                    --state.totalQuantity;\n                }\n            }\n        },\n        deleteCartItem : (state,action)=>{\n            let filteredCart = state.cartItems.filter((elem)=>{\n                return elem.id != action.payload.id;\n            })\n            state.cartItems = filteredCart;\n\n            state.totalItemsPrice = state.totalItemsPrice - (action.payload.price * action.payload.quantity);\n            state.totalQuantity = state.totalQuantity - action.payload.quantity;\n            --state.totalItems;\n        }\n    }\n})\n\nexport const {addCartItem,updateItemQuantity,deleteCartItem} = cartSlice.actions;\nexport default cartSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACjBC,SAAS,EAAG,EAAE;EACdC,eAAe,EAAG,CAAC;EACnBC,UAAU,EAAG,CAAC;EACdC,aAAa,EAAG;AACpB,CAAC;AAED,MAAMC,SAAS,GAAGN,WAAW,CAAC;EAC1BO,IAAI,EAAG,WAAW;EAClBN,YAAY;EACZO,QAAQ,EAAC;IACLC,WAAW,EAAG,CAACC,KAAK,EAACC,MAAM,KAAG;MAC1B,IAAIC,WAAW,GAAGF,KAAK,CAACR,SAAS,CAACW,IAAI,CAAEC,IAAI,IAAGA,IAAI,CAACC,EAAE,KAAGJ,MAAM,CAACK,OAAO,CAACD,EAAE,CAAC;MAC3E,IAAG,CAACH,WAAW,EAAC;QACZF,KAAK,CAACR,SAAS,GAAG,CAAC,GAAGQ,KAAK,CAACR,SAAS,EAAES,MAAM,CAACK,OAAO,CAAC;QACtDN,KAAK,CAACL,aAAa,GAAG,EAAEK,KAAK,CAACL,aAAa;QAC3CK,KAAK,CAACP,eAAe,GAAGO,KAAK,CAACP,eAAe,GAACQ,MAAM,CAACK,OAAO,CAACC,KAAK;QAClEP,KAAK,CAACN,UAAU,GAAG,EAAEM,KAAK,CAACN,UAAU;MACzC;IACJ,CAAC;IACDc,kBAAkB,EAAG,CAACR,KAAK,EAACC,MAAM,KAAG;MACjC,IAAIQ,KAAK,GAAGR,MAAM,CAACK,OAAO,CAACI,GAAG;MAE9B,IAAGT,MAAM,CAACK,OAAO,CAACK,QAAQ,KAAG,GAAG,EAAC;QAC7B,EAAEX,KAAK,CAACR,SAAS,CAACiB,KAAK,CAAC,CAACG,QAAQ;QACjCZ,KAAK,CAACP,eAAe,GAAGO,KAAK,CAACP,eAAe,GAAGQ,MAAM,CAACK,OAAO,CAACF,IAAI,CAACG,KAAK;QACzE,EAAEP,KAAK,CAACL,aAAa;MACzB,CAAC,MAAI;QACD,IAAGK,KAAK,CAACR,SAAS,CAACiB,KAAK,CAAC,CAACG,QAAQ,GAAC,CAAC,EAAC;UACjC,EAAEZ,KAAK,CAACR,SAAS,CAACiB,KAAK,CAAC,CAACG,QAAQ;UACjCZ,KAAK,CAACP,eAAe,GAAGO,KAAK,CAACP,eAAe,GAAGQ,MAAM,CAACK,OAAO,CAACF,IAAI,CAACG,KAAK;UACzE,EAAEP,KAAK,CAACL,aAAa;QACzB;MACJ;IACJ,CAAC;IACDkB,cAAc,EAAG,CAACb,KAAK,EAACC,MAAM,KAAG;MAC7B,IAAIa,YAAY,GAAGd,KAAK,CAACR,SAAS,CAACuB,MAAM,CAAEC,IAAI,IAAG;QAC9C,OAAOA,IAAI,CAACX,EAAE,IAAIJ,MAAM,CAACK,OAAO,CAACD,EAAE;MACvC,CAAC,CAAC;MACFL,KAAK,CAACR,SAAS,GAAGsB,YAAY;MAE9Bd,KAAK,CAACP,eAAe,GAAGO,KAAK,CAACP,eAAe,GAAIQ,MAAM,CAACK,OAAO,CAACC,KAAK,GAAGN,MAAM,CAACK,OAAO,CAACM,QAAS;MAChGZ,KAAK,CAACL,aAAa,GAAGK,KAAK,CAACL,aAAa,GAAGM,MAAM,CAACK,OAAO,CAACM,QAAQ;MACnE,EAAEZ,KAAK,CAACN,UAAU;IACtB;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAACK,WAAW;EAACS,kBAAkB;EAACK;AAAc,CAAC,GAAGjB,SAAS,CAACqB,OAAO;AAChF,eAAerB,SAAS,CAACsB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}